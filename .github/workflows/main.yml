name: Deploy EC2 with Terraform

on:
  workflow_dispatch:
    inputs:
      apply:
        description: 'Apply the Terraform plan?'
        required: true
        default: 'false'

env:
  #TF_LOG: TRACE
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
  ETHORIAN_NET_HOSTED_ZONE_ID: ${{secrets.ETHORIAN_NET_HOSTED_ZONE_ID}}
  TF_VAR_HTPASSWD_USER: ${{ secrets.HTPASSWD_USER }}
  TF_VAR_HTPASSWD_PASS: ${{ secrets.HTPASSWD_PASS }}

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Initialize
      run: terraform init

    - name: Terraform Plan
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_SSH_PUBLIC_KEY_HOME: ${{ secrets.SSH_PUBLIC_KEY_HOME }}
        TF_VAR_OPEN_SSH_PRIVATE_KEY: ${{ secrets.OPEN_SSH_PRIVATE_KEY }}
        TF_VAR_ETHORIAN_NET_HOSTED_ZONE_ID: ${{ secrets.ETHORIAN_NET_HOSTED_ZONE_ID }}
        TF_VAR_HTPASSWD_USER: ${{ secrets.HTPASSWD_USER }}
        TF_VAR_HTPASSWD_PASS: ${{ secrets.HTPASSWD_PASS }}
      run: terraform plan -out=tfplan

    - name: Upload plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: ./artifact-dir

  deploy:
    needs: plan
    if: github.event.inputs.apply == 'true'
    
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Initialize
      run: terraform init

    - name: Terraform Plan
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_SSH_PUBLIC_KEY_HOME: ${{ secrets.SSH_PUBLIC_KEY_HOME }}
        TF_VAR_OPEN_SSH_PRIVATE_KEY: ${{ secrets.OPEN_SSH_PRIVATE_KEY }}
        TF_VAR_ETHORIAN_NET_HOSTED_ZONE_ID: ${{ secrets.ETHORIAN_NET_HOSTED_ZONE_ID }}
        TF_VAR_HTPASSWD_USER: ${{ secrets.HTPASSWD_USER }}
        TF_VAR_HTPASSWD_PASS: ${{ secrets.HTPASSWD_PASS }}
      run: terraform plan

    - name: Terraform Apply
      if: github.event.inputs.apply == 'true'
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_SSH_PUBLIC_KEY_HOME: ${{ secrets.SSH_PUBLIC_KEY_HOME }}
        TF_VAR_OPEN_SSH_PRIVATE_KEY: ${{ secrets.OPEN_SSH_PRIVATE_KEY }}
        TF_VAR_ETHORIAN_NET_HOSTED_ZONE_ID: ${{ secrets.ETHORIAN_NET_HOSTED_ZONE_ID }}
        TF_VAR_HTPASSWD_USER: ${{ secrets.HTPASSWD_USER }}
        TF_VAR_HTPASSWD_PASS: ${{ secrets.HTPASSWD_PASS }}
      run: |
        terraform apply -auto-approve
        echo "instance_public_ip=$(terraform output instance_public_ip)"
